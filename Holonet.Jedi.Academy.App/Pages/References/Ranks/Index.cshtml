@page
@model Holonet.Jedi.Academy.App.Pages.References.Ranks.IndexModel
@{
	ViewData["Title"] = "Ranks";
}

<h1>Ranks</h1>
<hr />
<p>
	@if (Model.CanCreateEdit)
	{
		<a class="btn btn-primary btn-sm" asp-page="Index" title="Click to create a new item.">Create New</a>
	}
</p>
<div class="row">
	<div class="col-6">
		<div class="card">
			<div class="card-header">
				<h5>Listing</h5>
			</div>
			<div class="card-body">
				<table class="table table-striped table-hover">
					<thead>
						<tr>
							<th>Rank Level</th>
							<th>Name</th>
							<th>Experience Level</th>
							<th>Status</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Ranks)
						{
							<tr class="@(item.Id.Equals(Model.ID) ? "table-primary":"")">
								<td><span class="badge bg-secondary ">@Html.Raw(item.RankLevel)</span></td>
								<td>
									<a href="/References/Ranks/Index?id=@item.Id" title="Click to view the details.">@Html.DisplayFor(modelItem => item.Name)</a>
								</td>
								<td>@Html.Raw(item.Minimum) to @Html.Raw(item.Maximum)</td>
								<td>
									@if (item.Archived)
									{
										<span class="badge bg-danger">Archived</span>
									}
									else
									{
										<span class="badge bg-success">Active</span>
									}
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
	<div class="col-5 offset-1">
		<form method="post">
			<div class="card">
				<div class="card-header">
					<h5>Details</h5>
				</div>
				<div class="card-body">
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>
					@if (Model.Rank != null && Model.Rank.Id > 0)
					{
						<input type="hidden" asp-for="Rank.Id" />
					}
					<div class="mb-3">
						<label asp-for="Rank.Name" class="control-label"></label>
						@if (Model.CanCreateEdit)
						{
							<input asp-for="Rank.Name" class="form-control" />
						}
						else
						{
							<input asp-for="Rank.Name" class="form-control-plaintext" readonly />
						}
						<span asp-validation-for="Rank.Name" class="text-danger"></span>
					</div>
					<div class="mb-3">
						<label asp-for="Rank.RankLevel" class="control-label"></label>
						@if (Model.CanCreateEdit)
						{
							<input asp-for="Rank.RankLevel" class="form-control" />
						}
						else
						{
							<input asp-for="Rank.RankLevel" class="form-control-plaintext" readonly />
						}
						<span asp-validation-for="Rank.RankLevel" class="text-danger"></span>
					</div>
					<div class="mb-3">
						<label asp-for="Rank.Minimum" class="control-label"></label>
						@if (Model.CanCreateEdit)
						{
							<input asp-for="Rank.Minimum" class="form-control" />
						}
						else
						{
							<input asp-for="Rank.Minimum" class="form-control-plaintext" readonly />
						}
						<span asp-validation-for="Rank.Minimum" class="text-danger"></span>
					</div>
					<div class="mb-3">
						<label asp-for="Rank.Maximum" class="control-label"></label>
						@if (Model.CanCreateEdit)
						{
							<input asp-for="Rank.Maximum" class="form-control" />
						}
						else
						{
							<input asp-for="Rank.Maximum" class="form-control-plaintext" readonly />
						}
						<span asp-validation-for="Rank.Maximum" class="text-danger"></span>
					</div>
					<div class="mb-3">
						<p class="fst-italic">Archived items are retained, but they are no longer actionable or listed.</p>
						<div class="form-check">
							@if (Model.CanCreateEdit)
							{
								<input asp-for="Rank.Archived" type="checkbox" class="form-check-input" />
							}
							else
							{
								<input asp-for="Rank.Archived" type="checkbox" class="form-check-input" readonly />
							}

							<label asp-for="Rank.Archived" class="form-check-label"></label>
						</div>
						<span asp-validation-for="Rank.Archived" class="text-danger"></span>
					</div>
				</div>
				<div class="card-footer">
					@if (Model.CanCreateEdit)
					{
						<input type="submit" value="Save" class="btn btn-success" />
					}
				</div>
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script type="text/javascript" src="~/js/References/Ranks/index.js" asp-append-version="true"></script>
}